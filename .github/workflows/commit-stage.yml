name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: thomasvitale/band-service
  VERSION: ${{ github.sha }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: gradle
      - name: Compile and test
        run: ./gradlew build
      - name: Package as OCI image
        run: ./gradlew bootBuildImage --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      - uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.REGISTRY }}
      - name: Publish OCI image 
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      - name: Output image name
        id: image
        run: |
          image_name="$(echo ${env.REGISTRY}/${IMAGE_REGISTRY}/${IMAGE_NAME} | tr '[:upper:]' '[:lower:]')" 
          echo "::set-output name=image::$image_name"
      - name: Output image digest
        id: digest
        run: |
          image_digest="$(echo ${VERSION})" 
          echo "::set-output name=digest::$image_digest"
      # - name: Generate provenance metadata
      #   uses: slsa-framework/github-actions-demo@v0.1
      #   with:
      #     artifact_path: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
  
  provenance:
    name: Provenance
    needs: [build]
    permissions:
      actions: read
      id-token: write
      packages: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@main
    with:
      image: ${{ needs.build.outputs.image }}
      digest: ${{ needs.build.outputs.digest }}
      registry-username: ${{ github.actor }}
      compile-generator: true
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}
